- name: Create LEMP ( without mysql )
  hosts: webservers
  gather_facts: no
  tasks:
   - name: Installation Block

     block:
      - name: Task name
        stat:
         path: "/etc/yum.repos.d/epel.repo"
        register: is_repo
      - name: Add Repository
        copy:
         src: templates/epel.repo
         dest: /etc/yum.repos.d/epel.repo
        when: not is_repo.stat.exists
      - name: instalin LEMP
        yum:
         name: "{{ item }}"
         state: present
        with_items:
         - nginx
         - php-fpm

     always:
      - name: Restart nginx
        service:
         name: nginx
         state: restarted
         enabled: yes
      - name: Restart php
        service:
         name: php-fpm
         state: restarted
         enabled: yes
 
   - name: Create Fact Directory
     file:
      path: /etc/ansible/facts.d/
      state: directory

   - name: Copy Script
     copy:
      src: fact/findport.fact
      dest: /etc/ansible/facts.d/findport.fact
      force: true
      owner: root
      group: root
      mode: u+xwr,g+xwr,o+xwr
     notify:
      - Restart nginx
      - Restart php

   - name: Gathering Facts
     setup:
      filter: ansible_local

   - name: Create conf.d Directory
     file:
      path: /etc/nginx/conf.d/
      state: directory

   - name: Copy Config Nginx
     template:
      src: config/nginx.j2
      dest: /etc/nginx/conf.d/nginx.conf
     notify:
       - Restart nginx
       - Restart php

   - name: Security Block
     block:
      - name: permissive Selinux
        shell: setenforce 0 && iptables -F

      - name: Allow Connections on Port
        iptables:
         chain: INPUT
         protocol: tcp
         destination_ports:
          - "80"
         jump: ACCEPT

   - name: Copy And Backup Content Block

     block:      
      - name: Copy Content File
        copy:
         src: templates/info.php  
         dest: /usr/share/nginx/html/info.php
      - name: Archive Content
        shell: cd /usr/share/nginx/html/ && tar -cf /root/content.tar .
      - name: Backup Content
        fetch:
         src: /root/content.tar
         dest: backup/
         flat: yes
      - name: Remove TarFile
        shell: rm -rf /root/content.tar

     rescue:
      - name: Restore Data
        unarchive:
         src: backup/content.tar
         dest: /usr/share/nginx/html

     always:
      - name: Restart Services
        service:
         name: nginx
         state: restarted
      - name: Restart php
        service:
         name: php-fpm
         state: restarted


  handlers:
   - name: Restart nginx
     service:
      name: nginx
      state: restarted

   - name: Restart php
     service:
      name: php-fpm
      state: restarted 
